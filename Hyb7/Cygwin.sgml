<!DOCTYPE article PUBLIC "-//OASIS//DTD DocBook V4.1//EN">

<article>
  <articleinfo>
    <title>Compiling and Using Hybrid 7 Under Cygwin</title>

    <author>
      <firstname>W.</firstname>
      <surname>Campbell</surname>
    </author>

    <copyright>
      <year>2002</year>
      <holder role="mailto:hybrid@the-project.org">ircd-hybrid team</holder>
    </copyright>

    <releaseinfo>$Id: Cygwin.sgml,v 1.5 2002/04/25 14:39:27 wcampbel Exp $</releaseinfo>

    <abstract>
      <para>Brief instructions for Cygwin compilation.</para>
    </abstract>
  </articleinfo>

  <important>
    <para>Cygwin support is not complete, however is does work.  The Hybrid
          developers do not recommend using Cygwin as a production platform
          for IRC servers.  Cygwin support is primarily included only for
          testing purposes, and, to verify that the daemon will compile with
          a baseline POSIX system.</para>
  </important>

  <sect1 id="requirements">
    <title>Requirements</title>

    <para>A reasonably current Cygwin installation is needed.  The following
          programs are needed to compile Hybrid 7:  flex, bison, gcc, bash,
          binutils, crypt, gettext<footnote><para>gettext is only needed to
          provide dynamically changeable message files</para></footnote>,
          libintl<footnote><para>libintl is part of gettext</para></footnote>,
          make, openssl<footnote><para>At the present time, encrypted links
          cannot function on Cygwin.  OpenSSL is used for SSL protected oper
          blocks in addition to encrypted links, so it is still beneficial to
          include this program.</para></footnote>, sed, gawk, textutils,
          zlib<footnote><para>zlib is truly not used since compressed links
          cannot currently function on Cygwin.</para></footnote>.</para>

    <para>All of these programs are installed with the default Cygwin install.
          If you customize the installation, however, you must be sure that all
          of the needed packages are installed.</para>

    <para>Another package is needed to properly generate help index files.
          Index generation is only needed if you add or remove help files from
          <filename>help/opers</filename> or <filename>help/users</filename>,
          or if links are changed in <filename>help/Makefile.in</filename>.
          This package is available at
          <ulink url="http://ircd.botbay.net/pub/hybrid/cygwin/column.exe.gz">
          http://ircd.botbay.net/pub/hybrid/cygwin/column.exe.gz</ulink>
          and must be installed into <filename>/bin</filename> inside of Cygwin.
          </para>
  </sect1>

  <sect1>
    <title>Compilation Instructions</title>

    <para>Compiling Hybrid 7 on Cygwin is often a more involved process than
          compilation on Linux, FreeBSD, or Solaris.  There are options that
          must be passed to configure in order for compilation to work, and
          certain non-essential aspects of the build and install process do
          not currently function.</para>

    <procedure>
      <step><para>Decide where the ircd will be installed.  This path is vital.
                  </para></step>

      <step><para>Run the configure script with the
                  <option>--disable-shared-modules</option> command line option
                  and the desired installation path specified in the
                  <option>--prefix</option> option.</para>

            <screen>
<prompt>$</prompt> <command>./configure --prefix=<userinput>/path/to/installed/ircd</userinput> --disable-shared-modules</command>
            </screen>
            </step>

      <step><para>Run <command>make</command></para></step>

      <step><para>Run <command>make install</command></para></step>

      <step><para>Configure the ircd as you normally would.  Please note the
                  additional considerations described below.</para></step>
    </procedure>
  </sect1>

  <sect1>
    <title>Important Considerations</title>

    <para>Cygwin does not implement all of the functionality used by certain
          parts of Hybrid.  Because of this, certain features will not work.
          </para>

    <itemizedlist>
      <listitem><para>Encrypted links and zip links do not currently work.
                      These two services are provided by the external
                      <command>servlink</command> process, which, although
                      runs, cannot transfer data between the network connection
                      and the ircd process.  This may only be a temporary issue.
                      </para></listitem>

      <listitem><para>Loadable modules do not currently function.  Due to the
                      design of Windows DLL files, a module cannot be compiled
                      with runtime resolvable symbols.  Modules can only be
                      configured statically, and as such, you can only use
                      the stock Hybrid 7 modules without code modifications.
                      Please refer to the <link linkend="static">Static
                      Modules Section</link> of this document for more
                      information.</para></listitem>

      <listitem><para><command>make</command> cannot currently generate
                      index files for the help system.  The
                      <command>column</command> command is not present on
                      Cygwin.  A Cygwin package containing a port of the
                      <command>column</command> command is available from the
                      Hybrid developers.  Please look at the
                      <link linkend="requirements">Requirements</link> section
                      above.  Prebuilt help system indexes are included with
                      Hybrid 7 source distribution.</para></listitem>

      <listitem><para><command>make install</command> does not properly handle
                      the .exe file extension.  As a consequence, when the
                      install script backs up the old copies of the binaries,
                      it does not include the .exe extension, so the backup
                      fails.  The install continues successfully.
                      </para></listitem>
    </itemizedlist>
  </sect1>

  <sect1 id="static">
    <title>Customizing the Static Modules</title>

    <para>Using additional modules, not included with the base Hybrid 7
          distribution, is a little complicated and requires some code
          modifications.</para>

    <para>Extra modules must be compiled statically into the
          <command>ircd</command> binary, and have their
          <varname>msgtab</varname> loaded into the command parser.  This
          requires changes to the <filename>Makefile</filename> the
          <filename>modules.c</filename> source file, and the
          <filename>modules.h</filename> include file.</para>

    <para>When you decide on the module(s) you wish to add to ircd, you must
          make the following changes to the files.  For the following examples,
          suppose that we want to add the <filename>m_map.c</filename> and
          <filename>m_jupe.c</filename> modules to the ircd.
          <footnote><para>This section is applicable to any platform.  If an
          administrator wishes to have a truly secure server, they can have
          modules disabled.  This section allows, for example, a hub server
          to statically compile <command>JUPE</command> into her server, and
          avoid the security risks associated with dynamically loadable modules.
          </para></footnote></para>

    <procedure>
      <step><para>The desired modules must be copied into the
                  <filename>modules/</filename></para></step>

      <step><para>The <filename>modules/Makefile.in</filename> file must be
                  edited to include the desired modules.</para>

            <para>In the <filename>modules/Makefile.in</filename> file,
                  you must add the two module source files to the
                  <option>SRCS</option> line.  Below is the excerpt from the
                  file showing the edits.</para>

            <screen>
  m_who.c \
  m_whois.c \
  <userinput>m_jupe.c \</userinput>
  <userinput>m_map.c \</userinput>
  m_whowas.c

ALL_SRCS = $(CORE_SRCS) \
            </screen></step>

      <step><para>The <filename>src/modules.c</filename> file must also be
                  modified to load the new modules into the command parser.
                  This is done in the <function>load_all_modules()</function>
                  function at the bottom of the file.<footnote><para>There are
                  two <function>load_all_modules()</function> functions in
                  <filename>src/modules.c</filename>.  The needed one is the
                  one at the bottom of the file; the one that is enabled
                  when dynamic modules are disabled.</para></footnote>  The
                  new commands are loaded by adding
                  <function>mod_add_cmd()</function> calls to the
                  function.</para>

            <para>The following excerpt shows what parts need to be added to
                  load the <command>JUPE</command> and <command>MAP</command>
                  commands to a statically compiled ircd.</para>

            <screen>
        mod_add_cmd(&amp;wallops_msgtab);
        mod_add_cmd(&amp;who_msgtab);
        mod_add_cmd(&amp;whois_msgtab);
        <userinput>mod_add_cmd(&amp;jupe_msgtab);</userinput>
        <userinput>mod_add_cmd(&amp;map_msgtab);</userinput>
        mod_add_cmd(&amp;whowas_msgtab);
}

#endif /* STATIC_MODULES */
            </screen></step>

      <step><para>Any changes to <filename>src/modules.c</filename> must
                  be accompanied by a change to
                  <filename>include/modules.h</filename>.  The 
                  <varname>msgtab</varname> variables for the new modules must
                  be declared in this header file in order to compile
                  ircd.</para>

            <para>The following excerpt shows what must be added.</para>

            <screen>
extern struct Message wallops_msgtab;
extern struct Message who_msgtab;
extern struct Message whois_msgtab;
<userinput>extern struct Message jupe_msgtab;</userinput>
<userinput>extern struct Message map_msgtab;</userinput>
extern struct Message whowas_msgtab;

extern void load_all_modules(int check);

#endif /* STATIC_MODULES */
#endif /* INCLUDED_modules_h */
            </screen></step>

      <step><para><command>configure</command> must be rerun in order for the
                  changes to <filename>modules/Makefile.in</filename> to
                  take effect.</para></step>

      <step><para>Compile and install ircd as you normally would.</para>

            <warning><para>Some modules are not set up for static compilation;
                           as such, these modules will need to be modified.
                           This can be done by putting the line:
                           <userinput>#ifndef STATIC_MODULES</userinput> above
                           the definition of the
                           <function>_modinit()</function>, and by putting the
                           line:  <userinput>#endif</userinput> below the
                           definition of the <varname>_version</varname>
                           variable.  ircd must be recompiled after changing
                           the modules.</para></warning></step>
    </procedure>
  </sect1>

</article>
